[Source file]
# name of the dataset, used to identify result files
id = ExampleDataset
# can also be a relative path
filename = ./fake_data2.csv
# field delimiter in source file, if tabulator delimited, write TAB
delimiter = ,
# quote character used to mark text fields, if no quote char, write NONE
quotechar = NONE
# datetime format as per python datetime
datetime format = %d.%m.%Y %H:%M
# extra characters at the end of timestamps
datetime extra char = 0
# skip these columns when reading
skip columns = NONE
# datafile columns that store the fault and status codes separated with a comma
# include all columns with non-numeric values here
fault columns = 5,6,7,8
# if fault/status codes are in the file as text this needs to be set to True
replace fault codes = True


[Output]
# directory where the result files will be put.
result directory = ./results/example/
# write  a summary. txt file
summary = True
# draw the power curve plot, write it to .png file
plot = True
# write a time series of icing alarms
alarm time series = True
# write the time series data into a file with some useful added columns
filtered raw data = True
# Write icing event start stop times into a file
icing events = True
# write the power curve into a .txt file
power curve = True

# set options for used data structure. Column indexing starts from 0
[Data Structure]
timestamp index = 0
wind speed index = 1
wind direction index = 2
temperature index = 3
power index = 4
# in units used in the datafile
rated power = 2000
state index = 5
normal state = OK
# meters above sea level
site elevation = 100
status index = 6
# statuscode value that indicates that the turbine is stopped
status code stop value = STOP

# icing related options, indexing starts from 0
[Icing]
# is there an ice detection signal in the SCADA, ice detector or other signal
ice detection = True
# signal value that indicates icing alarm
icing alarm code = WHAT
icing alarm index = 7
# Is there heating, set to False if not
heating = True
# ips status code that indicates that blade heating is on
ips status code = ON
ips status index = 8
# see documentation on this, defines the way ips status is defined
ips status type = 1
# set the value to negative if there is no explicit heating power measurement
ips power consumption index = -1


# set binning options
[Binning]
# smallest wind speed bin. All wind speeds below this value end up in the first bin
minimum wind speed = 0
# largest wind speed bin, all values above this will end up in the last bin
maximum wind speed = 30
#bin width in m/s
wind speed bin size = 0.5
# bin size for directional binning in degrees
wind direction bin size = 360

# filtering options
[Filtering]
# lower limit for power curve aka P10
power drop limit = 10
# power  curve upper limit
overproduction limit = 90
# icing time filter (number of samples)
icing time = 3
# limit for defining the stop limit
stop limit multiplier = 0.005
# time filter length for stop detection (in samples once again)
stop time filter = 6
#state filter type; see documentation for details
statefilter type = 1
# how the status code indicating stop should be interpreted, see the documentation for details
stop filter type = 1
# power level filter to remove obvious stopppages from data
power level filter = 0.01
# temperature limit to create the reference dataset in degrees Celsius
reference temperature = 3
# temeperature limit for icing event
temperature filter = 1
# minimum bin size
min bin size = 36
# additional filter for power curve smoothing
distance filter = True
# start and stop times for time limiting the analysis
start time = NONE
stop time = NONE
